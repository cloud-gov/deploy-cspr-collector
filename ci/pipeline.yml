
---
jobs:

- name: configure-pipeline
  serial_groups: [development,staging, production]
  plan:
  - in_parallel:
    - get: pipeline-source
      trigger: true
      params: {depth: 1}
  - set_pipeline: self
    file: pipeline-source/ci/pipeline.yml

- name: deploy-cspr-collector-development
  serial_groups: [development]
  plan:
  - in_parallel:
    - get: cspr-collector-app
      trigger: true
    - get: config-source
      trigger: true
  - put: create-es
    resource: cf-cli-dev
    params: &aws-es-params
      command: create-service
      update_service: true
      wait_for_service: true
      timeout: 1200  
      service_instance: cspr-collector-aws-es
      service: aws-elasticsearch
      plan: es-dev
  - put: deploy-cspr-collector-development
    params:
      manifest: config-source/manifest.yml
      path: cspr-collector-app
      current_app_name: cspr-collector

resources:

- name: pipeline-source
  type: git
  source:
    uri: https://github.com/cloud-gov/deploy-cspr-collector
    branch: inital-deploy
    paths: [ci/pipeline.yml]

- name: config-source
  type: git
  source:
    uri: https://github.com/cloud-gov/deploy-cspr-collector
    branch: inital-deploy

- name: cspr-collector-app
  type: git
  source:
    uri: https://github.com/soutenniza/cspr-collector

- name: deploy-cspr-collector-development
  type: cf
  source:
    api: ((development-cf-api-url))
    username: ((development-cf-deployer.username))
    password: ((development-cf-deployer.password))
    organization: cloud-gov
    space: cspr-collector
    skip_cert_check: false

- name: cf-cli-dev
  type: cf-cli-resource
  source:
    api: ((development-cf-api-url))
    username: ((development-cf-deployer.username))
    password: ((development-cf-deployer.password))
    org: cloud-gov
    space: cspr-collector

resource_types:
- name: cf-cli-resource
  type: docker-image
  source:
    repository: nulldriver/cf-cli-resource
    tag: latest